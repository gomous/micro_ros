xhost +local:root
    make sure this is done or else gui from the containers will not show 

sudo docker run -it \
  --name ros2_foxy_container \
  --network host \
  --privileged \
  -v /dev:/dev \
  -v /tmp/.X11-unix:/tmp/.X11-unix \
  -e DISPLAY=$DISPLAY \
  -v $HOME/.Xauthority:/root/.Xauthority \
  -v $(pwd):/workspace \
  ros2_foxy:latest

Use Docker volume binding correctly

To open the same container in different termainl use 
    sudo docker exec -it ros2_foxy_container bash

Alternatively: If the container is stopped:
    sudo docker start -ai ros2_foxy_container

apt install ros-foxy-turtlesim 
    to check if turtlesim is installed 


ros2 pkg executables turtlesim
    to check the turtle sim executables

ros2 run turtlesim turtlesim_node
    to run the turtle_node 

ros2 run turtlesim turtle_teleop_key
    to launch a control feature for the turtlesim

apt update
apt install -y ros-foxy-rqt* python3-pyqt5
    to install rqt (if not installed, although the Dockerfile ensures it)

rqt 
    to launch the rqt (if its blank don't worry, its all there you have to go to Plugins > Topics > Topic Monitor)

    use this link to learn about rqt (basics) https://youtu.be/KEcqO_gIJtU?si=KMBdecfUMrUu1h_U

ros2 run turtlesim turtle_teleop_key --ros-args --remap turtle/:=turtle2/cmd_vel
    if in case there are two turtle use this to assign control to the second one 


ros2 topic echo /turtle1/cmd_vel
    to print the turtle velocity 

ros2 topic list -t 
    display type of topic


ros2 topic info /turtle1/cmd_vel


ros2 interface show geometry_msg/msg/Twist

ros2 launch teleop_twist_joy teleop-launch.py joy_config:='xbox'
    to launch the telop twist in terminal


Setup for micro ros aruduino
    -Install aruduino
    -Setup the esp32 
    -Include the micro ros library from https://github.com/BxNxM/micrOS

    go to the workspace inside the container go to src 
        git clone https://github.com/micro-ROS/micro-ROS-Agent.git -b foxy
        git clone https://github.com/micro-ROS/micro_ros_msgs.git

    cd /workspace
    source /opt/ros/foxy/setup.bash
    colcon build --symlink-install

    after this 
    
            sudo docker run -it \
        --name ros2_foxy_container \
        --network host \
        --privileged \
        -v /dev:/dev \
        -v /tmp/.X11-unix:/tmp/.X11-unix \
        -e DISPLAY=$DISPLAY \
        -v $HOME/.Xauthority:/root/.Xauthority \
        -v $(pwd):/workspace \
        ros2_foxy:latest

    ros2 run micro_ros_agent micro_ros_agent udp4 --port 8888
        to run using wifi
    
    ros2 topic list
        to view the names of the topic list (say esp_pub_sub)
    
    ros2 topic echo /esp_pub_sub
        to view what the esp32 is publishing

    ros2 run micro_ros_agent micro_ros_agent udp4 --port 8888
        inside the container to enable the wifi feature


How to start it again
    sudo docker start -ai test_container
    ros2 run micro_ros_agent micro_ros_agent udp4 --port 8888
    ros2 topic 
    ros2 launch teleop_twist_joy teleop-launch.py joy_confg='xbox'